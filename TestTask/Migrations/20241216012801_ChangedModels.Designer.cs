// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TestTask.Data.DbContext;

#nullable disable

namespace TestTask.Migrations
{
    [DbContext(typeof(TestTaskDbContext))]
    [Migration("20241216012801_ChangedModels")]
    partial class ChangedModels
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TestTask.Data.Models.Contract", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EquipmentCount")
                        .HasColumnType("int");

                    b.Property<string>("EquipmentTypeCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProductFacilityCode")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("EquipmentTypeCode");

                    b.HasIndex("ProductFacilityCode");

                    b.ToTable("Contracts", (string)null);
                });

            modelBuilder.Entity("TestTask.Data.Models.EquipmentType", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Equipment_Types", (string)null);

                    b.HasData(
                        new
                        {
                            Code = "e001",
                            Area = 20.0,
                            Name = "EquipmentA"
                        },
                        new
                        {
                            Code = "e002",
                            Area = 15.0,
                            Name = "EquipmentB"
                        },
                        new
                        {
                            Code = "e003",
                            Area = 5.0,
                            Name = "EquipmentC"
                        },
                        new
                        {
                            Code = "e004",
                            Area = 40.0,
                            Name = "EquipmentD"
                        });
                });

            modelBuilder.Entity("TestTask.Data.Models.ProductFacility", b =>
                {
                    b.Property<string>("Code")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Area")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Code");

                    b.ToTable("Product_Facilities", (string)null);

                    b.HasData(
                        new
                        {
                            Code = "p001",
                            Area = 100.0,
                            Name = "ProductA"
                        },
                        new
                        {
                            Code = "p002",
                            Area = 75.0,
                            Name = "ProductB"
                        },
                        new
                        {
                            Code = "p003",
                            Area = 50.0,
                            Name = "ProductC"
                        },
                        new
                        {
                            Code = "p004",
                            Area = 25.0,
                            Name = "ProductD"
                        });
                });

            modelBuilder.Entity("TestTask.Data.Models.Contract", b =>
                {
                    b.HasOne("TestTask.Data.Models.EquipmentType", "Equipment")
                        .WithMany("Contracts")
                        .HasForeignKey("EquipmentTypeCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TestTask.Data.Models.ProductFacility", "Product")
                        .WithMany("Contracts")
                        .HasForeignKey("ProductFacilityCode")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Equipment");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("TestTask.Data.Models.EquipmentType", b =>
                {
                    b.Navigation("Contracts");
                });

            modelBuilder.Entity("TestTask.Data.Models.ProductFacility", b =>
                {
                    b.Navigation("Contracts");
                });
#pragma warning restore 612, 618
        }
    }
}
